import React from "react";
import { Link } from "react-router-dom";
import Urls from "../Urls";

import Row from 'reactstrap/lib/Row';
import Col from 'reactstrap/lib/Col';
import Collapse from 'reactstrap/lib/Collapse';
import Navbar from 'reactstrap/lib/Navbar';
import NavbarToggler from 'reactstrap/lib/NavbarToggler';

import MediaQuery from 'react-responsive';

import { IconProfile } from "../Icons";
import SecurityManager from "../../security/SecurityManager";


import { Navigation, MobileNav } from "./Navigation/Navigation";
import SearchForm from "../Search/SearchForm/SearchForm";
import Modal from '../ui-components/Modal/Modal'

import styles from './Header.scss'
function Logo() {
    return (

        <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 112 112'>

            <path
                fill="none"
                stroke="#000"
                strokeWidth="5"
                strokeLinecap="square"
                strokeMiterlimit="2.6131"
                d='M107.7,107.7H4.3V4.3h103.5V107.7z M38.8,38.8h34.5 M38.8,56h34.5 M38.8,21.5v69 M73.2,21.5v69 M107.7,73.2H4.3'
            />
        </svg>

    );
}
function ArtistIcon() {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" id="Layer_1" viewBox="0 0 512.001 512.001">
            <path d="M155.371,146.531c16.652,0,30.199-13.547,30.199-30.199c0-16.653-13.547-30.2-30.199-30.2s-30.199,13.547-30.199,30.2 C125.172,132.984,138.719,146.531,155.371,146.531z M155.371,101.13c8.382,0,15.201,6.819,15.201,15.202 c0,8.382-6.819,15.201-15.201,15.201s-15.201-6.819-15.201-15.201S146.989,101.13,155.371,101.13z" />
            <path d="M91.72,216.822c20.094,0,36.442-16.348,36.442-36.442s-16.349-36.442-36.442-36.442 c-20.094,0-36.442,16.348-36.442,36.442C55.278,200.474,71.626,216.822,91.72,216.822z M91.72,158.936 c11.824,0,21.444,9.62,21.444,21.444c0,11.824-9.62,21.444-21.444,21.444s-21.444-9.62-21.444-21.444 S79.896,158.936,91.72,158.936z" />
            <path d="M154.592,296.409c-20.093,0-36.442,16.349-36.442,36.442c0,20.093,16.349,36.442,36.442,36.442 c20.093,0,36.442-16.348,36.442-36.442C191.033,312.757,174.685,296.409,154.592,296.409z M154.592,354.296 c-11.824,0-21.444-9.62-21.444-21.444s9.62-21.444,21.444-21.444c11.824,0,21.444,9.62,21.444,21.444 S166.416,354.296,154.592,354.296z" />
            <path d="M84.622,233.803c-20.298,0-36.812,16.514-36.812,36.812s16.515,36.812,36.812,36.812 c20.297,0,36.812-16.515,36.812-36.812C121.435,250.317,104.92,233.803,84.622,233.803z M84.622,292.43 c-12.028,0-21.814-9.786-21.814-21.814c0-12.028,9.786-21.814,21.814-21.814c12.028,0,21.814,9.786,21.814,21.814 C106.437,282.643,96.651,292.43,84.622,292.43z" />
            <path d="M504.594,135.603c-14.819-14.819-35.377-4.139-44.182,3.578l-85.544,75.057c-5.193-33.216-21.952-40.721-36.007-40.721 c-16.376,0-32.342,10.782-36.91,14.135l-30.729,23.057c-17.023,12.775-41.274,7.964-52.234-10.206 c-9.517-15.785-5.555-36.046,9.214-47.128l30.792-23.106c44.382-34.053,31.339-79.395-49.511-89.033 C111.676,29.461,16.685,98.106,1.921,201.613c-15.267,107.048,62.254,203.853,168.544,213.903 c-3.904,15.636-3.036,32.165,3.17,47.015c0.761,1.82,2.208,3.268,4.027,4.027c45.813,19.146,104.385-14.083,100.842-60.475 c2.246-0.395-0.816,1.352,44.559-29.343c15.649,7.38,33.302-9.163,27.296-25.255L456.72,230.267 c2.731-3.113,2.422-7.851-0.691-10.582c-3.113-2.731-7.851-2.423-10.582,0.691l-104.579,119.19l-40.239-40.238 c3.31-2.904,161.819-141.98,169.64-148.842c0.151-0.129,15.176-12.818,23.719-4.276c8.54,8.54-4.149,23.571-4.246,23.685 l-28.24,32.185c-2.731,3.113-2.422,7.851,0.691,10.582c3.112,2.731,7.852,2.423,10.582-0.691l28.248-32.194 C508.726,170.968,519.387,150.4,504.594,135.603z M251.962,437.659c-17.468,17.47-43.251,24.112-65.606,16.184 c-11.585-32.771,10.609-77.342,43.844-77.342c9.15,0,17.617,3.426,23.844,9.653C267.669,399.78,266.735,422.886,251.962,437.659z M278.131,389.032c-11.545-11.546-16.317-16.318-26.966-26.968l22.445-33.18l37.701,37.703L278.131,389.032z M336.572,358.111 c0,1.961-1.181,2.813-2.663,4.294c-1.486,1.488-4.08,1.488-5.568-0.002l-50.55-50.551c-1.536-1.536-1.536-4.034,0-5.57 l1.506-1.506c1.488-1.491,4.082-1.489,5.57,0C339.649,359.557,336.572,355.762,336.572,358.111z M288.726,289.817 c-15.893-5.937-32.645,11.633-25.281,27.324c-29.797,44.051-28.902,42.084-29.339,44.509 c-26.251-2.005-47.492,15.597-58.548,39.253C75.87,393.586,2.544,303.464,16.77,203.731 c12.817-89.869,91.397-151.7,177.415-148.606c39.368,1.362,72.092,15.595,74.825,31.818 c2.428,14.405-16.932,29.727-19.082,31.378l-30.728,23.058c-24.205,18.164-27.316,52.953-6.827,75.169 c17.208,18.656,46.494,22.186,67.851,6.157l30.664-23.009c7.029-5.158,18.573-11.181,27.974-11.181 c13.088,0,20.572,12.705,22.27,37.775L288.726,289.817z" />
        </svg>
    )
}
function GalleryIcon() {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="1 -47 511.999 511">
            <path d="m469.488281 84.417969h-4.390625c-2.570312-22.023438-20.292968-39.484375-42.441406-41.621094-2.542969-23.742187-22.683594-42.296875-47.085938-42.296875h-302.21875c-40.445312 0-73.351562 32.90625-73.351562 73.347656v211.902344c0 24.574219 18.804688 44.828125 42.773438 47.144531 2.515624 23.488281 22.261718 41.886719 46.3125 42.273438.0625 4.167969.714843 8.191406 1.898437 11.988281 5.386719 17.292969 21.550781 29.882812 40.59375 29.882812h337.910156c23.441407 0 42.511719-19.070312 42.511719-42.507812v-247.601562c0-23.441407-19.070312-42.511719-42.511719-42.511719zm22.511719 42.511719v163.738281l-43.5-32.859375c-11.886719-8.976563-27.960938-9.117188-40-.347656l-55.027344 40.09375-104.9375-108.1875c-12.5-12.890626-32.839844-13.683594-46.304687-1.800782l-93.160157 82.191406v-142.828124c0-12.414063 10.097657-22.511719 22.507813-22.511719h337.910156c12.414063 0 22.511719 10.097656 22.511719 22.511719zm0 247.597656c0 12.414062-10.097656 22.511718-22.507812 22.511718h-337.914063c-10.082031 0-18.640625-6.667968-21.492187-15.824218-.660157-2.113282-1.015626-4.359375-1.015626-6.683594v-78.105469l106.394532-93.863281c5.441406-4.804688 13.660156-4.484375 18.714844.726562l47.359374 48.828126c0 .003906 0 .003906.003907.003906l94.261719 97.183594c1.960937 2.023437 4.566406 3.039062 7.179687 3.039062 2.507813 0 5.019531-.9375 6.960937-2.820312 3.960938-3.847657 4.058594-10.175782.214844-14.140626l-22.625-23.328124 52.742188-38.425782c4.867187-3.546875 11.363281-3.492187 16.167968.136719l55.554688 41.964844zm-429.5-46.707032v-236.109374c0-1.003907.050781-2 .152344-2.976563 1.492187-14.675781 13.925781-26.164063 28.988281-26.164063h122.320313c5.523437 0 10-4.476562 10-10 0-5.523437-4.476563-10-10-10h-122.320313c-27.097656 0-49.140625 22.042969-49.140625 49.140626v220.976562c-12.777344-2.300781-22.5-13.503906-22.5-26.9375v-211.902344c0-29.414062 23.933594-53.347656 53.351562-53.347656h302.21875c13.273438 0 24.371094 9.503906 26.84375 22.070312h-108.453124c-5.523438 0-10 4.476563-10 10 0 5.523438 4.476562 10 10 10h118.96875.011718 5.128906c13.195313 0 24.242188 9.394532 26.800782 21.847657h-313.292969c-23.4375 0-42.507813 19.070312-42.507813 42.511719v164.976562.007812 63.253907c-14.722656-.417969-26.570312-12.523438-26.570312-27.347657zm0 0" />
            <path d="m388.515625 145.117188c-23.601563 0-42.796875 19.199218-42.796875 42.792968 0 23.597656 19.199219 42.796875 42.796875 42.796875 23.59375 0 42.792969-19.199219 42.792969-42.796875 0-23.59375-19.199219-42.792968-42.792969-42.792968zm0 65.589843c-12.570313 0-22.796875-10.226562-22.796875-22.792969 0-12.570312 10.226562-22.796874 22.796875-22.796874 12.566406 0 22.792969 10.226562 22.792969 22.796874 0 12.566407-10.226563 22.792969-22.792969 22.792969zm0 0" />
            <path d="m244.730469 56.398438c.25.601562.558593 1.179687.917969 1.722656.363281.546875.78125 1.058594 1.242187 1.519531.460937.457031.96875.878906 1.519531 1.25.539063.359375 1.128906.667969 1.730469.917969.597656.25 1.230469.441406 1.871094.570312.636719.128906 1.296875.191406 1.949219.191406.660156 0 1.308593-.0625 1.960937-.191406.636719-.128906 1.257813-.320312 1.867187-.570312.601563-.25 1.179688-.558594 1.722657-.917969.546875-.371094 1.058593-.792969 1.519531-1.25.46875-.460937.878906-.972656 1.25-1.519531.359375-.542969.667969-1.121094.917969-1.722656.25-.609376.441406-1.238282.570312-1.867188.128907-.652344.191407-1.3125.191407-1.960938 0-.652343-.0625-1.3125-.191407-1.949218-.128906-.640625-.320312-1.273438-.570312-1.871094-.25-.609375-.558594-1.191406-.917969-1.730469-.371094-.550781-.78125-1.058593-1.25-1.519531-.460938-.460938-.972656-.878906-1.519531-1.242188-.542969-.359374-1.121094-.667968-1.722657-.917968-.609374-.25-1.230468-.441406-1.867187-.570313-1.292969-.261719-2.621094-.261719-3.910156 0-.640625.128907-1.273438.320313-1.871094.570313-.601563.25-1.191406.558594-1.730469.917968-.550781.363282-1.058594.78125-1.519531 1.242188s-.878906.96875-1.242187 1.519531c-.359376.539063-.667969 1.121094-.917969 1.730469-.25.597656-.441407 1.230469-.570313 1.871094-.128906.636718-.199218 1.296875-.199218 1.949218 0 .648438.070312 1.308594.199218 1.960938.128906.628906.320313 1.257812.570313 1.867188zm0 0" />
        </svg>

    )
}
class AppHeader extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            userinfoDropDown: false,
            navigation: [],
            isOpen: false,
            registerModal: false,
        };
    }
    componentDidMount() { }

    openRegisterModal = value => {
        this.setState({
            registerModal: value
        });
    };
    closeRegisterModal = () => {
        this.setState({
            registerModal: false
        });
    };
    toggle = () => {
        this.setState({
            isOpen: !this.state.isOpen
        });
    }
    userinfoDropDown = () => {
        this.setState({
            userinfoDropDown: !this.state.userinfoDropDown
        });
    };

    logout = async () => {
        await SecurityManager().logout();
        location.reload();
        this.forceUpdate();
    };

    render() {
        const url = window.location.href;
        const { isLogined, navList, openModal } = this.props;
        return (
            <React.Fragment>
                <Row>
                    <MediaQuery query="(max-width: 768px)">
                        <Col xs="12" lg="12" md="12" sm="12" className="mobileLogin">
                            {!isLogined &&

                                <div className="mobile-login-btn right">
                                    <button
                                        className="zbtn"
                                        onClick={() => openModal(true)}
                                    >
                                        <span>ثبت نام / ورود</span>
                                    </button>
                                </div>
                            }
                            <div
                                className={`mobile-login-btn ${isLogined ? `w-100` : `left`}`}

                            >
                                <button
                                    onClick={() => this.openRegisterModal(true)}
                                    className="zbtn"
                                >ثبت گالری / هنرمند
                                    </button>
                            </div>
                        </Col>
                    </MediaQuery>

                </Row>
                <header className={`${styles.header} fixed`}>
                    <MediaQuery query="(max-width: 768px)">
                        <div className="menu-collapse">
                            <Collapse isOpen={this.state.isOpen} navbar>
                                <MobileNav navList={navList} />

                            </Collapse>
                        </div>
                        <div className={styles.MobileNavigation}>
                            <div className="logoMobile">
                                <div className={styles.logo}>
                                    <Link to='/'>
                                        <span className="text">خانه</span>
                                        <Logo />
                                    </Link>
                                </div></div>
                            <div className="menuMobile">

                                <Navbar color="#fff" light expand="md" className="navigation">
                                    <NavbarToggler onClick={this.toggle} />

                                </Navbar>
                            </div>
                            <div className="SearchMobile">
                                <SearchForm />
                            </div>
                        </div>
                    </MediaQuery>
                    <Row>
                        <MediaQuery query="(min-width: 769px)">

                            <Col xs="12" lg="6" md={!isLogined ? 5 : 6} sm="12">
                                <Row>
                                    <Col xs="auto">
                                        <div className={styles.logo}>
                                            <Link to='/'>
                                                <span className="text">خانه</span>
                                                <Logo />
                                            </Link>
                                        </div>
                                    </Col>
                                    <SearchForm />
                                </Row>
                            </Col>
                            <Col xs="12" lg="6" md={!isLogined ? 7 : 6} sm="12">
                                <Navbar color="#fff" light expand="md" className="navigation">
                                    <NavbarToggler onClick={this.toggle} />
                                    <Collapse isOpen={this.state.isOpen} navbar>
                                        <Navigation navList={navList} isLogined={isLogined} className="ml-auto" />


                                    </Collapse>

                                    <div className={styles.loginbtn}>
                                        {isLogined &&
                                            <span
                                                data-anchor="right"
                                                className={styles.zaminehDropdown}
                                                data-mode="hover"
                                            >
                                                <IconProfile
                                                    height="42px"
                                                    width="42px"
                                                    fill="transparent"
                                                    stroke="#000"
                                                />
                                                <div className={`${styles.zaminehDropdown}-menu`}>
                                                    <a href="/profile">پروفایل</a>
                                                    <a href="/profile">پروفایل</a>
                                                    <a onClick={this.logout}>خروج</a>
                                                </div>
                                            </span>
                                        }
                                        {!isLogined &&
                                            <button
                                                className="zbtn white"
                                                onClick={() => openModal(true)}
                                            >
                                                <span>ثبت نام / ورود</span>
                                            </button>
                                        }
                                        <button
                                            onClick={() => this.openRegisterModal(true)}
                                            className="zbtn black"
                                        >ثبت گالری / هنرمند</button>
                                    </div>
                                </Navbar>
                            </Col>
                        </MediaQuery>
                    </Row>
                </header>


                <Modal
                    isOpen={this.state.registerModal}
                    toggle={this.closeRegisterModal}
                    className={styles.ZaminehRegisterModal}
                    title={"انتخاب نوع ثبت نام"}
                >
                    <Row>
                        <Col lg={6} md={6} sm={6} xs={12}>
                            <a href={Urls().ArtistRegistration()} onClick={this.closeRegisterModal}>
                                <button
                                    style={{ width: '100%', marginBottom: 15 }}
                                    className={`zbtn artist`}
                                >
                                    {/*<ArtistIcon />*/}
                                    ثبت هنرمند</button>
                            </a>
                        </Col>
                        <Col lg={6} md={6} sm={6} xs={12}>
                            <a href={Urls().GalleryRegistration()} onClick={this.closeRegisterModal}>
                                <button
                                    style={{ width: '100%' }}
                                    className={`zbtn gallery`}
                                >
                                    {/*<GalleryIcon />*/}
                                    ثبت گالری</button>
                            </a>
                        </Col>
                    </Row>
                </Modal>
            </React.Fragment>
        );
    }
}
export default AppHeader;
